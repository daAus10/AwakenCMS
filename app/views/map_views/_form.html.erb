<%#= form_with(model: map_view) do |form| %>
  <%# if map_view.errors.any? %>
<!--    <div style="color: red">-->
<!--      <h2><%#= pluralize(map_view.errors.count, "error") %> prohibited this map_view from being saved:</h2>-->

<!--      <ul>-->
        <%# map_view.errors.each do |error| %>
<!--          <li><%#= error.full_message %></li>-->
        <%# end %>
<!--      </ul>-->
<!--    </div>-->
  <%# end %>

<!--  <div>-->
    <%#= form.label :url, style: "display: block" %>
    <%#= form.text_field :url %>
<!--  </div>-->

<!--  <div>-->
    <%#= form.submit %>
<!--  </div>-->
<%# end %>


<%= form_with(model: map_view, html: { id: 'map-view-form' }) do |form| %>
  <% if map_view.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(map_view.errors.count, "error") %> prohibited this map_view from being saved:</h2>

      <ul>
        <% map_view.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <%= form.label :url, style: "display: block" %>
    <%= form.text_field :url, id: 'map-view-url-field' %>
  </div>

  <div>
    <%= form.submit %>
  </div>
<% end %>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var form = document.getElementById('map-view-form');
        var urlField = document.getElementById('map-view-url-field');

        form.addEventListener('submit', function(event) {
            var url = urlField.value;

            if (!isValidUrl(url)) {
                event.preventDefault();
                alert('The URL must be a valid link');
            }
        });

        function isValidUrl(url) {
            var pattern = new RegExp('^(https?:\\/\\/)?'+ // protocol
                '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|'+ // domain name
                '((\\d{1,3}\\.){3}\\d{1,3}))'+ // IP address
                '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*'+ // port and path
                '(\\?[;&a-z\\d%_.~+=-]*)?'+ // query string
                '(\\#[-a-z\\d_]*)?$','i'); // fragment locator
            return pattern.test(url);
        }
    });
</script>
